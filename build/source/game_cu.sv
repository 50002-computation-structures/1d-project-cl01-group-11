/*
    This file was generated automatically by Alchitry Labs 2.0.28-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module game_cu (
        input wire clk,
        input wire rst,
        input wire start,
        input wire [7:0] buttonpress,
        input wire decrease_timer,
        input wire delay,
        input wire [3:0] regfile_rd2,
        output reg [5:0] alufn,
        output reg [2:0] asel,
        output reg [2:0] bsel,
        output reg [3:0] wa,
        output reg [3:0] ra1,
        output reg [3:0] ra2,
        output reg [0:0] we
    );
    localparam E_States_IDLE = 6'h0;
    localparam E_States_STARTTIMER = 6'h1;
    localparam E_States_RESETSCORE = 6'h2;
    localparam E_States_GEN1 = 6'h3;
    localparam E_States_LOADBUTTON1 = 6'h4;
    localparam E_States_GEN2 = 6'h5;
    localparam E_States_CHECK1 = 6'h6;
    localparam E_States_BRANCHCHECK1 = 6'h7;
    localparam E_States_LOADBUTTON2 = 6'h8;
    localparam E_States_GEN3 = 6'h9;
    localparam E_States_CHECK2 = 6'ha;
    localparam E_States_BRANCHCHECK2 = 6'hb;
    localparam E_States_CHECK3 = 6'hc;
    localparam E_States_BRANCHCHECK3 = 6'hd;
    localparam E_States_LOADBUTTON3 = 6'he;
    localparam E_States_CHECKTIMER = 6'hf;
    localparam E_States_BRANCHTIMER = 6'h10;
    localparam E_States_CHECKBUTTON = 6'h11;
    localparam E_States_BRANCHCHECKBUTTON = 6'h12;
    localparam E_States_INCREASESCORE = 6'h13;
    localparam E_States_GENNEW = 6'h14;
    localparam E_States_CHECK4 = 6'h15;
    localparam E_States_BRANCHCHECK4 = 6'h16;
    localparam E_States_CHECK5 = 6'h17;
    localparam E_States_BRANCHCHECK5 = 6'h18;
    localparam E_States_CHECK6 = 6'h19;
    localparam E_States_BRANCHCHECK6 = 6'h1a;
    localparam E_States_CHECK7 = 6'h1b;
    localparam E_States_BRANCHCHECK7 = 6'h1c;
    localparam E_States_CHECK8 = 6'h1d;
    localparam E_States_BRANCHCHECK8 = 6'h1e;
    localparam E_States_CHECK9 = 6'h1f;
    localparam E_States_BRANCHCHECK9 = 6'h20;
    localparam E_States_SHIFT1 = 6'h21;
    localparam E_States_SHIFT2 = 6'h22;
    localparam E_States_LOADNEW = 6'h23;
    localparam E_States_END = 6'h24;
    localparam E_States_DECREASETIMER = 6'h25;
    localparam E_States_UPDATEHIGHSCORE = 6'h26;
    localparam E_States_SETGAMEFLAG0 = 6'h27;
    localparam E_States_SETGAMEFLAG1 = 6'h28;
    localparam E_States_BUTTON0PRESS = 6'h29;
    localparam E_States_BUTTON1PRESS = 6'h2a;
    localparam E_States_BUTTON2PRESS = 6'h2b;
    localparam E_States_BUTTON3PRESS = 6'h2c;
    localparam E_States_BUTTON4PRESS = 6'h2d;
    localparam E_States_BUTTON5PRESS = 6'h2e;
    localparam E_States_BUTTON6PRESS = 6'h2f;
    localparam E_States_BUTTON7PRESS = 6'h30;
    localparam E_States_CLEAR1 = 6'h31;
    localparam E_States_CLEAR2 = 6'h32;
    localparam E_States_CLEAR3 = 6'h33;
    logic [5:0] D_states_d, D_states_q = 6'h0;
    always @* begin
        D_states_d = D_states_q;
        
        alufn = 1'h0;
        asel = 2'h0;
        bsel = 2'h0;
        wa = 1'h0;
        ra1 = 1'h0;
        ra2 = 1'h0;
        we = 1'h0;
        D_states_d = D_states_q;
        if (rst) begin
            D_states_d = 6'h0;
        end else begin
            
            case (D_states_q)
                6'h0: begin
                    if (decrease_timer) begin
                        D_states_d = 6'hf;
                    end else begin
                        if (buttonpress[1'h0]) begin
                            D_states_d = 6'h29;
                        end else begin
                            if (buttonpress[1'h1]) begin
                                D_states_d = 6'h2a;
                            end else begin
                                if (buttonpress[2'h2]) begin
                                    D_states_d = 6'h2b;
                                end else begin
                                    if (buttonpress[2'h3]) begin
                                        D_states_d = 6'h2c;
                                    end else begin
                                        if (buttonpress[3'h4]) begin
                                            D_states_d = 6'h2d;
                                        end else begin
                                            if (buttonpress[3'h5]) begin
                                                D_states_d = 6'h2e;
                                            end else begin
                                                if (buttonpress[3'h6]) begin
                                                    D_states_d = 6'h2f;
                                                end else begin
                                                    if (buttonpress[3'h7]) begin
                                                        D_states_d = 6'h30;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                6'h2: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h3;
                    wa = 3'h5;
                    we = 1'h1;
                    D_states_d = 6'h28;
                end
                6'h28: begin
                    alufn = 6'h0;
                    bsel = 3'h3;
                    asel = 3'h2;
                    wa = 1'h0;
                    we = 1'h1;
                    D_states_d = 6'h3;
                end
                6'h3: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h2;
                    wa = 3'h6;
                    we = 1'h1;
                    D_states_d = 6'h4;
                end
                6'h4: begin
                    ra1 = 3'h6;
                    alufn = 6'h1a;
                    asel = 3'h0;
                    bsel = 3'h3;
                    wa = 2'h2;
                    we = 1'h1;
                    if (delay) begin
                        D_states_d = 6'h5;
                    end
                end
                6'h5: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h2;
                    wa = 3'h6;
                    we = 1'h1;
                    D_states_d = 6'h1b;
                end
                6'h1b: begin
                    ra1 = 3'h6;
                    ra2 = 2'h2;
                    alufn = 6'h33;
                    asel = 3'h0;
                    bsel = 3'h0;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h1c;
                end
                6'h1c: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h5;
                    end else begin
                        D_states_d = 6'h8;
                    end
                end
                6'h8: begin
                    ra1 = 3'h6;
                    alufn = 6'h1a;
                    asel = 3'h0;
                    bsel = 3'h3;
                    wa = 2'h3;
                    we = 1'h1;
                    if (delay) begin
                        D_states_d = 6'h9;
                    end
                end
                6'h9: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h2;
                    wa = 3'h6;
                    we = 1'h1;
                    D_states_d = 6'h1d;
                end
                6'h1d: begin
                    ra1 = 3'h6;
                    ra2 = 2'h2;
                    alufn = 6'h33;
                    asel = 3'h0;
                    bsel = 3'h0;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h1e;
                end
                6'h1e: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h9;
                    end else begin
                        D_states_d = 6'h1f;
                    end
                end
                6'h1f: begin
                    ra1 = 3'h6;
                    ra2 = 2'h3;
                    alufn = 6'h33;
                    asel = 3'h0;
                    bsel = 3'h0;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h20;
                end
                6'h20: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h9;
                    end else begin
                        D_states_d = 6'he;
                    end
                end
                6'he: begin
                    ra1 = 3'h6;
                    alufn = 6'h1a;
                    asel = 3'h0;
                    bsel = 3'h3;
                    wa = 3'h4;
                    we = 1'h1;
                    D_states_d = 6'h1;
                end
                6'h1: begin
                    alufn = 6'h0;
                    asel = 3'h1;
                    bsel = 3'h3;
                    wa = 3'h7;
                    we = 1'h1;
                    D_states_d = 6'h0;
                end
                6'h29: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h3;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h2a: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h1;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h2b: begin
                    alufn = 6'h0;
                    asel = 3'h2;
                    bsel = 3'h1;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h2c: begin
                    alufn = 6'h0;
                    asel = 3'h4;
                    bsel = 3'h3;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h2d: begin
                    alufn = 6'h0;
                    asel = 3'h5;
                    bsel = 3'h3;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h2e: begin
                    alufn = 6'h0;
                    asel = 3'h5;
                    bsel = 3'h1;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h2f: begin
                    alufn = 6'h0;
                    asel = 3'h4;
                    bsel = 3'h4;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h30: begin
                    alufn = 6'h0;
                    asel = 3'h4;
                    bsel = 3'h5;
                    wa = 1'h1;
                    we = 1'h1;
                    D_states_d = 6'h11;
                end
                6'h11: begin
                    alufn = 6'h33;
                    ra1 = 1'h1;
                    ra2 = 2'h2;
                    asel = 3'h0;
                    bsel = 2'h0;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h12;
                end
                6'h12: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h13;
                    end else begin
                        D_states_d = 6'h0;
                    end
                end
                6'h13: begin
                    ra1 = 3'h5;
                    alufn = 6'h0;
                    asel = 3'h0;
                    bsel = 3'h1;
                    wa = 3'h5;
                    we = 1'h1;
                    D_states_d = 6'h14;
                end
                6'h14: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h2;
                    wa = 3'h6;
                    we = 1'h1;
                    D_states_d = 6'h15;
                end
                6'h15: begin
                    ra1 = 3'h6;
                    ra2 = 2'h2;
                    alufn = 6'h33;
                    asel = 3'h0;
                    bsel = 3'h0;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h16;
                end
                6'h16: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h14;
                    end else begin
                        D_states_d = 6'h17;
                    end
                end
                6'h17: begin
                    ra1 = 3'h6;
                    ra2 = 2'h3;
                    alufn = 6'h33;
                    asel = 3'h0;
                    bsel = 3'h0;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h18;
                end
                6'h18: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h14;
                    end else begin
                        D_states_d = 6'h19;
                    end
                end
                6'h19: begin
                    ra1 = 3'h6;
                    ra2 = 3'h4;
                    alufn = 6'h33;
                    asel = 3'h0;
                    bsel = 3'h0;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h1a;
                end
                6'h1a: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h14;
                    end else begin
                        D_states_d = 6'h21;
                    end
                end
                6'h21: begin
                    alufn = 6'h0;
                    ra2 = 2'h3;
                    asel = 3'h3;
                    bsel = 3'h0;
                    wa = 2'h2;
                    we = 1'h1;
                    D_states_d = 6'h22;
                end
                6'h22: begin
                    alufn = 6'h0;
                    ra2 = 3'h4;
                    asel = 3'h3;
                    bsel = 3'h0;
                    wa = 2'h3;
                    we = 1'h1;
                    D_states_d = 6'h23;
                end
                6'h23: begin
                    alufn = 6'h0;
                    ra2 = 3'h6;
                    asel = 3'h3;
                    bsel = 3'h0;
                    wa = 3'h4;
                    we = 1'h1;
                    D_states_d = 6'h0;
                end
                6'hf: begin
                    alufn = 6'h33;
                    ra1 = 3'h7;
                    asel = 3'h0;
                    bsel = 3'h3;
                    wa = 4'h8;
                    we = 1'h1;
                    D_states_d = 6'h10;
                end
                6'h10: begin
                    ra2 = 4'h8;
                    if (regfile_rd2[1'h0]) begin
                        D_states_d = 6'h27;
                    end else begin
                        D_states_d = 6'h25;
                    end
                end
                6'h25: begin
                    alufn = 6'h1;
                    ra1 = 3'h7;
                    asel = 3'h0;
                    bsel = 3'h1;
                    wa = 3'h7;
                    we = 1'h1;
                    D_states_d = 6'h0;
                end
                6'h27: begin
                    alufn = 6'h0;
                    asel = 3'h3;
                    bsel = 3'h3;
                    wa = 1'h0;
                    we = 1'h1;
                    D_states_d = 6'h31;
                end
                6'h31: begin
                    alufn = 6'h0;
                    asel = 3'h5;
                    bsel = 3'h5;
                    wa = 2'h2;
                    we = 1'h1;
                    D_states_d = 6'h32;
                end
                6'h32: begin
                    alufn = 6'h0;
                    asel = 3'h5;
                    bsel = 3'h5;
                    wa = 2'h3;
                    we = 1'h1;
                    D_states_d = 6'h33;
                end
                6'h33: begin
                    alufn = 6'h0;
                    asel = 3'h5;
                    bsel = 3'h5;
                    wa = 3'h4;
                    we = 1'h1;
                    D_states_d = 6'h26;
                end
                6'h26: begin
                    ra1 = 4'h9;
                    ra2 = 3'h5;
                    alufn = 6'h3;
                    asel = 3'h0;
                    bsel = 3'h0;
                    wa = 4'h9;
                    we = 1'h1;
                    D_states_d = 6'h24;
                end
                6'h24: begin
                    if (start) begin
                        D_states_d = 6'h2;
                    end
                end
            endcase
        end
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_states_q <= 6'h0;
        end else begin
            D_states_q <= D_states_d;
        end
    end
endmodule